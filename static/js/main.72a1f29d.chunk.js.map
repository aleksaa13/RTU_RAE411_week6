{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["options","value","label","children","App","props","componentDidMount","setState","requestType","onChange","n","onChangeRequest","displayNumberInput","displayButton","req","length","displayInputNumber","getFormat","state","htmlFor","key","nativeEvent","data","className","id","min","defaultValue","result","makeRequest","bind","url","this","axios","get","then","res","console","log","body","score_key","score_value","post","new_key","new_value","put","patch","delete","placeholder","onClick","Object","keys","map","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72a1f29d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Cascader } from \"antd\";\r\nimport { InputNumber } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Input } from \"antd\";\r\n\r\nconst options = [\r\n  {\r\n    value: \"GET\",\r\n    label: \"GET\",\r\n    children: [\r\n      {\r\n        value: \"scores\",\r\n        label: \"Scores\",\r\n      },\r\n      {\r\n        value: \"Specific score\",\r\n        label: \"Specific score\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: \"POST\",\r\n    label: \"POST\",\r\n  },\r\n  {\r\n    value: \"PUT\",\r\n    label: \"PUT\",\r\n  },\r\n  {\r\n    value: \"PATCH\",\r\n    label: \"PATCH\",\r\n  },\r\n  {\r\n    value: \"DELETE\",\r\n    label: \"DELETE\",\r\n  },\r\n];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      requestType: [],\r\n      n: 0,\r\n      displayInputNumber: false,\r\n      displayButton: false,\r\n      result: {},\r\n      key: \"\",\r\n      value: \"\",\r\n    };\r\n    this.makeRequest = this.makeRequest.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ requestType: \"GET\" });\r\n  };\r\n\r\n  onChange = (value) => {\r\n    this.setState({ n: value });\r\n  };\r\n\r\n  onChangeRequest = (value) => {\r\n    this.setState({ requestType: value });\r\n    this.displayNumberInput(value);\r\n    this.setState({ displayButton: true });\r\n  };\r\n\r\n  displayNumberInput = (req) => {\r\n    if (\r\n      req.length === 1 &&\r\n      (req[0] === \"PUT\" || req[0] === \"PATCH\" || req[0] === \"DELETE\")\r\n    ) {\r\n      this.setState({ displayInputNumber: true });\r\n    } else if (req[1] === \"Specific score\") {\r\n      this.setState({ displayInputNumber: true });\r\n    } else this.setState({ displayInputNumber: false });\r\n  };\r\n\r\n  getFormat = () => {\r\n    switch (this.state.requestType[0]) {\r\n      case \"POST\":\r\n        return (\r\n          <div>\r\n            <span>\r\n              <label htmlFor=\"input_score_key\">Key:</label>\r\n              <Input\r\n                onChange={(value) =>\r\n                  this.setState({ key: value.nativeEvent.data })\r\n                }\r\n                value={this.state.key}\r\n                className=\"input\"\r\n                id=\"input_score_key\"\r\n              />\r\n            </span>{\" \"}\r\n            <span>\r\n              <label htmlFor=\"input_score_value\">Value:</label>\r\n              <InputNumber\r\n                min={0}\r\n                defaultValue={1}\r\n                onChange={(value) => this.setState({ value: value })}\r\n                value={this.state.value}\r\n                className=\"input\"\r\n                id=\"input_score_value\"\r\n              />\r\n            </span>\r\n          </div>\r\n        );\r\n\r\n      case \"PATCH\":\r\n        return (\r\n          <div>\r\n            <span>\r\n              <label htmlFor=\"input_new_value\">Value:</label>\r\n              <InputNumber\r\n                min={0}\r\n                defaultValue={1}\r\n                onChange={(value) => this.setState({ value: value })}\r\n                value={this.state.value}\r\n                className=\"input\"\r\n                id=\"input_new_value\"\r\n              />{\" \"}\r\n            </span>\r\n          </div>\r\n        );\r\n      case \"PUT\":\r\n        return (\r\n          <div>\r\n            <span>\r\n              <label htmlFor=\"input_new_score_key\">Key:</label>\r\n              <Input\r\n                onChange={(value) =>\r\n                  this.setState({ key: value.nativeEvent.data })\r\n                }\r\n                value={this.state.key}\r\n                className=\"input\"\r\n                id=\"input_new_score_key\"\r\n              />\r\n            </span>\r\n            <span>\r\n              <label htmlFor=\"input_new_score_value\">Value:</label>{\" \"}\r\n              <InputNumber\r\n                min={0}\r\n                defaultValue={1}\r\n                onChange={(value) => this.setState({ value: value })}\r\n                value={this.state.value}\r\n                className=\"input\"\r\n                id=\"input_new_score_value\"\r\n              />\r\n            </span>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  makeRequest() {\r\n    let url;\r\n    if (this.state.requestType[0] === \"GET\") {\r\n      if (this.state.requestType[1] === \"scores\") {\r\n        url = `http://localhost:5000/scores`;\r\n      } else {\r\n        url = `http://localhost:5000/scores/${this.state.n}`;\r\n      }\r\n      axios.get(url).then((res) => {\r\n        this.setState({ result: res.data });\r\n        console.log(res.data);\r\n      });\r\n    } else if (this.state.requestType[0] === \"POST\") {\r\n      let body = {\r\n        score_key: this.state.key,\r\n        score_value: this.state.value,\r\n      };\r\n      axios.post(`http://localhost:5000/scores`, body).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ result: res.data });\r\n      });\r\n    } else if (this.state.requestType[0] === \"PUT\") {\r\n      let body = {\r\n        new_key: this.state.key,\r\n        new_value: this.state.value,\r\n      };\r\n      axios\r\n        .put(`http://localhost:5000/scores/${this.state.n}`, body)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({ result: res.data });\r\n        });\r\n    } else if (this.state.requestType[0] === \"PATCH\") {\r\n      let body = {\r\n        new_value: this.state.value,\r\n      };\r\n      axios\r\n        .patch(`http://localhost:5000/scores/${this.state.n}`, body)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({ result: res.data });\r\n        });\r\n    } else {\r\n      axios\r\n        .delete(`http://localhost:5000/scores/${this.state.n}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({ result: res.data });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> Requester </h1>\r\n        <div className=\"container\">\r\n          <div className=\"chose\">\r\n            <Cascader\r\n              options={options}\r\n              placeholder=\"Select Request Type\"\r\n              onChange={this.onChangeRequest}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div\r\n              className={this.state.displayInputNumber ? \"normal\" : \"invisible\"}\r\n            >\r\n              Choose n:\r\n              <InputNumber\r\n                min={0}\r\n                defaultValue={0}\r\n                onChange={this.onChange}\r\n                value={this.state.n}\r\n              />\r\n            </div>\r\n            <div className=\"requestBody\">{this.getFormat()}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"buttonHolder\">\r\n          <button\r\n            onClick={this.makeRequest}\r\n            className={this.state.displayButton ? \"makeRequest\" : \"invisible\"}\r\n          >\r\n            MAKE REQUEST\r\n          </button>\r\n        </div>\r\n        <div className={this.state.displayButton ? \"response\" : \"invisible\"}>\r\n          {Object.keys(this.state.result).map((key) => {\r\n            return <div>{`\"${key}\" : ${this.state.result[key]}`}</div>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}